name: Typescript CI

on:
  push:
    branches:
      - 'main'
  pull_request:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build_and_test:
    name: Check build and test

    strategy:
      fail-fast: true
      matrix:
        os:
          - 'ubuntu-latest'
          - 'macos-latest'
          - 'windows-latest'

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS Dependencies
        uses: ./.github/actions/install-node-dependencies

      - name: Build project
        run: pnpm build

      - name: Test project
        run: pnpm test

  lint_and_fmt:
    name: Check format and lint
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS Dependencies
        uses: ./.github/actions/install-node-dependencies

      - name: Check formatting
        run: pnpm run format

      - name: Lint
        run: pnpm run lint

      - name: Typecheck
        run: pnpm run typecheck

  ci_ok:
    name: Typescript CI OK
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: always()
    needs: [build_and_test, lint_and_fmt]
    env:
      FAILURE: ${{ contains(join(needs.*.result, ','), 'failure') }}
      CANCELLED: ${{ contains(join(needs.*.result, ','), 'cancelled') }}
    steps:
      - name: Check for failure or cancelled jobs result
        shell: bash
        run: |
          echo "Failure: $FAILURE - Cancelled: $CANCELLED"
          if [ "$FAILURE" = "false" ] && [ "$CANCELLED" = "false" ]; then
            exit 0
          else
            exit 1
          fi
